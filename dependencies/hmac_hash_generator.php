<?php

/*
To ensure that all customer requests processed by Churnkey are authorized, server-side verification is implemented. 
This involves generating an HMAC hash on the customer ID (or subscription ID for Paddle users) using SHA-256 hashing. 
Before triggering the Churnkey flow, a request is sent to the server to (a) validate the request's authenticity, 
typically using existing authorization measures, and (b) compute the customer's ID hash. Below are examples in various backend languages.

For more: https://docs.churnkey.co/installing-churnkey
*/

// We define two constants below, 'CUSTOMER_ID' and 'API_KEY', which hold the required data to generate the secure HMAC Hash.
define('CUSTOMER_ID', 'cus_QVBhnykr03RYfs');
define('API_KEY', 'test_4yhYBA2C5kTMLYLX2Hn4j64xSKIExR1k');


// The variable below generates and holds the hash...keep in mind that this page requires the CDN javascript to exists in the header of whatever page you run this script on. 
// see step one on this page: https://docs.churnkey.co/installing-churnkey
$hash_var = hash_hmac('sha256', CUSTOMER_ID, API_KEY);

// The code below basically makes the hash that was generated by PHP usable to javascript, it puts it into a js variable, which can then be used by the event listener in file 'churnkey_event_listener.js'
// which should be included in the javascript folder. 
// see step three on this page https://docs.churnkey.co/installing-churnkey

echo "<script>";
echo "var jsVar = '" . $hash_var  . "';";
// echo "console.log(jsVar);"; // Output: 'Hello, world!' (you can un comment this to test and see the hash in the browser console if needed)
echo "</script>";